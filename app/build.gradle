buildscript {
    repositories {
        mavenCentral()
        maven { url 'https://maven.fabric.io/public' }
    }
    dependencies {
        classpath 'io.fabric.tools:gradle:1.22.2'
    }
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'io.fabric'

repositories {
    mavenCentral()
    maven { url 'https://maven.fabric.io/public' }
}

kapt {
    generateStubs = true
}

android {
    compileSdkVersion rootProject.sdkCompile
    buildToolsVersion rootProject.buildToolsVersion
    defaultConfig {
        applicationId rootProject.applicationId
        minSdkVersion rootProject.sdkMin
        targetSdkVersion rootProject.sdkTarget
        versionCode rootProject.versionCode
        versionName rootProject.version
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }

        vectorDrawables {
            useSupportLibrary = true
        }

    }

    buildTypes {
        debug {
            ext.alwaysUpdateBuildId = false // Augments Fabric, improves build speed
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    flavorDimensions rootProject.defaultFlavorDimension
    productFlavors {
        dev {
            //minSdkVersion 21 // take advantage of the NEW multidex. Legacy multidex builds slowly.
            //resConfigs ("en", "xxhdpi")
            dimension rootProject.defaultFlavorDimension
        }
        prod {
            dimension rootProject.defaultFlavorDimension
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')

    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jre7:' + rootProject.kotlin_version

    // Support library
    implementation 'com.android.support:appcompat-v7:' + rootProject.supportLibVersion
    implementation 'com.android.support:cardview-v7:' + rootProject.supportLibVersion
    implementation 'com.android.support:recyclerview-v7:' + rootProject.supportLibVersion
    implementation 'com.android.support:design:' + rootProject.supportLibVersion
    implementation 'com.android.support.constraint:constraint-layout:' + rootProject.constraintLayoutVersion

    // Android architecture components
    implementation 'android.arch.lifecycle:extensions:' + rootProject.archLifecycleVersion
    annotationProcessor "android.arch.lifecycle:compiler:" + rootProject.archLifecycleVersion
    kapt "android.arch.lifecycle:compiler:" + rootProject.archLifecycleVersion

    // Room ORM
    implementation 'android.arch.persistence.room:runtime:' + rootProject.archRoomVersion
    implementation 'android.arch.persistence.room:rxjava2:' + rootProject.archRoomVersion
    annotationProcessor "android.arch.persistence.room:compiler:" + rootProject.archRoomVersion
    kapt "android.arch.persistence.room:compiler:" + rootProject.archRoomVersion

    // Picasso images
    implementation 'com.squareup.picasso:picasso:' + rootProject.picassoVersion

    // RxJava 2
    implementation 'io.reactivex.rxjava2:rxjava:' + rootProject.rxJavaVersion
    implementation 'io.reactivex.rxjava2:rxkotlin:' + rootProject.rxKotlinVersion
    implementation 'io.reactivex.rxjava2:rxandroid:' + rootProject.rxAndroidVersion
    implementation 'com.trello.rxlifecycle2:rxlifecycle:' + rootProject.rxLifecycleVersion
    implementation 'com.trello.rxlifecycle2:rxlifecycle-android:' + rootProject.rxLifecycleVersion
    implementation 'com.trello.rxlifecycle2:rxlifecycle-components:' + rootProject.rxLifecycleVersion
    implementation 'com.trello.rxlifecycle2:rxlifecycle-kotlin:' + rootProject.rxLifecycleVersion
    implementation 'com.fernandocejas:arrow:' + rootProject.arrowVersion
    // provides an Optional implementation

    // Dagger 2
    implementation 'com.google.dagger:dagger:' + rootProject.daggerVersion
    annotationProcessor 'com.google.dagger:dagger-compiler:' + rootProject.daggerVersion
    kapt 'com.google.dagger:dagger-compiler:' + rootProject.daggerVersion

    // Date and time utilities
    implementation 'net.danlew:android.joda:' + rootProject.jodaTimeVersion
    implementation 'org.ocpsoft.prettytime:prettytime:' + rootProject.prettyTimeVersion

    // Crashlytics
    implementation('com.crashlytics.sdk.android:crashlytics:' + rootProject.crashlyticsVersion) {
        transitive = true
    }

    /* Unit Test */

    // JUnit and mocking
    testImplementation 'junit:junit:4.12'
    testImplementation 'org.mockito:mockito-core:' + rootProject.mockitoVersion
    testImplementation 'com.crittercism.dexmaker:dexmaker:1.4'
    testImplementation 'com.crittercism.dexmaker:dexmaker-dx:1.4'
    testImplementation 'com.crittercism.dexmaker:dexmaker-mockito:1.4'

    // Robolectric
    testImplementation 'org.robolectric:robolectric:' + rootProject.robolectricVersion
    testImplementation 'org.robolectric:shadows-support-v4:' + rootProject.robolectricVersion
    testImplementation 'org.khronos:opengl-api:' + rootProject.robolectricOpenglVersion

    /* Android Test */

    // Dagger 2
    androidTestImplementation 'com.google.dagger:dagger:' + rootProject.daggerVersion
    androidTestAnnotationProcessor 'com.google.dagger:dagger-compiler:' + rootProject.daggerVersion
    kaptAndroidTest 'com.google.dagger:dagger-compiler:' + rootProject.daggerVersion

    // Support library
    androidTestImplementation 'com.android.support:support-annotations:' + rootProject.supportLibVersion
    androidTestImplementation 'com.android.support:support-v4:' + rootProject.supportLibVersion
    androidTestImplementation 'com.android.support:recyclerview-v7:' + rootProject.supportLibVersion
    androidTestImplementation 'com.android.support:design:' + rootProject.supportLibVersion
    androidTestImplementation 'com.android.support.constraint:constraint-layout:' + rootProject.constraintLayoutVersion
    androidTestImplementation 'com.android.support.test:runner:' + rootProject.testRunnerVersion
    androidTestImplementation 'com.android.support.test:rules:' + rootProject.testRulesVersion

    // Espresso
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:' + rootProject.espressoVersion
    androidTestImplementation('com.android.support.test.espresso:espresso-contrib:' + rootProject.espressoVersion) {
        exclude group: 'com.android.support'
    }
    androidTestImplementation('com.android.support.test.espresso:espresso-contrib:' + rootProject.espressoVersion) {
        exclude group: 'com.android.support'
    }

}
